@using System.Security.Claims;

@{
    ViewData["Title"] = "Events Overview";

    bool CanManipulateOnEvents()
    {
        return IsAdmin() || IsUser();
    }

    bool IsAdmin() => RoleIsLoggedIn("Admin");
    bool IsUser() => RoleIsLoggedIn("User");
    bool IsInstructor() => RoleIsLoggedIn("Instructor");

    bool RoleIsLoggedIn(string role) => User.Identities.First().Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value == role;
}

<h1>EventsOverview</h1>

<div class="d-flex justify-content-between">
    <div>
        <a class="btn btn-success" asp-action="Create">Create event</a>
    </div>
    <div>
        <a class="btn btn-dark" asp-action="MultipleDownload">Download multiple events as .ics</a>
    </div>
</div>

<table class="table">
    <tr>
        <th>
            Name
        </th>
        <th>
            @Html.ActionLink("Category", "Events", new { sortBy = ViewBag.SortCategoryParameter })            
        </th>
        <th>
            Description
        </th>
        <th>            
            @Html.ActionLink("Place", "Events", new { sortBy = ViewBag.SortPlaceParameter })          
        </th>
        <th>
            @Html.ActionLink("Start Time", "Events", new { sortBy = ViewBag.SortTimeParameter })            
        </th>
        <th>
            End Time
        </th>
        <th>
            Date
        </th>
        <th>
            Last Date
        </th>
        <th>
            AdditionalInfo
        </th>
        <th>
            ImageUrl
        </th>
        <th>
            Recurrency
        </th>
        <th>
            Done
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @item.Name
            </td>
            <td>
                @item.Category
            </td>
            <td>
                @item.Description
            </td>
            <td>
                @item.Place
            </td>
            <td>
                @item.StartTime.ToShortTimeString()
            </td>
            <td>
                @item.EndTime.ToShortTimeString()
            </td>
            <td>
                @item.Date.ToShortDateString()
            </td>
            <td>
                @item.LastDate.ToShortDateString()
            </td>
            <td>
                @item.AdditionalInfo
            </td>
            <td>
                @item.ImageUrl
            </td>
            <td>
                @item.Recurrency
            </td>
            <td>
                @item.Done
            </td>
            <td>
                <div class="btn-group">
                    @if(CanManipulateOnEvents())
                    {
                        <a class="btn btn-success" asp-controller="Subscriptions" asp-action="create" asp-route-id="@item.Id">Subscribe</a>
                        <a class="btn btn-dark" asp-controller="EventsOverview" asp-action="Download" asp-route-id="@item.Id">Download as .ics</a>
                        <a class="btn btn-warning" asp-controller="EventsOverview" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-danger" asp-controller="EventsOverview" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        <a class="btn btn-outline-primary" asp-controller="EventsOverview" asp-action="Assign" asp-route-id="@item.Id">Assign to instructor</a>
                        <a class="btn btn-success" asp-controller="Invitations" asp-action="Create" asp-route-id="@item.Id">Invite a friend</a>
                    }
                    @if(IsInstructor())
                    {
                        <a class="btn btn-warning" asp-controller="EventsOverview" asp-action="Done" asp-route-id="@item.Id">Mark as done</a>                        
                    }
                </div>
            </td>
        </tr>
    }
</table>
