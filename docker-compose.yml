version: '3.4'

networks:
  dev:
    driver: bridge

services:
  eventingwebsite:
    container_name: EventingWebsite
    image: eventingwebsite
    build:
      context: .
      dockerfile: WebUI/WebUI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development      
    ports:
      - 5000:5000      
    depends_on:
      - postgresql
    networks:
      - dev
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/appuser/.microsoft/usersecrets:ro      
      - ${APPDATA}/ASP.NET/Https:/home/appuser/.aspnet/https:ro

  apigetaway:    
    container_name: ApiGetaway
    image: ocelotgateway
    build:
      context: .
      dockerfile: ApiGateway/OcelotGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development      
    ports:
      - 5010:5010
    depends_on:
      - postgresql
    networks:
      - dev
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/appuser/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/appuser/.aspnet/https:ro

  events:    
    container_name: EventsService
    image: eventsservice
    build:
      context: .
      dockerfile: Services/Events/WebAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=${CONNECTION_STRING_MONGODB}
    ports:
      - 5020:5020
    depends_on:
      - postgresql
      - rabbitmq
    networks:
      - dev
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/appuser/.microsoft/usersecrets:ro      
      - ${APPDATA}/ASP.NET/Https:/home/appuser/.aspnet/https:ro
  
  subscriptions:    
    container_name: SubscriptionsService
    image: subscriptionsservice
    build:
      context: .
      dockerfile: Services/Subscriptions/WebAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=${CONNECTION_STRING_MONGODB}
    ports:
      - 5030:5030
    depends_on:
      - postgresql
    networks:
      - dev
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/appuser/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/appuser/.aspnet/https:ro
  
  invitations:    
    container_name: InvitationsService
    image: invitationsservice
    build:
      context: .
      dockerfile: Services/Invitations/WebAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development 
    ports:
      - 5040:5040
    depends_on:
      - postgresql
      - rabbitmq
    networks:
      - dev
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/appuser/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/appuser/.aspnet/https:ro

  authentication:    
    container_name: AuthenticationService
    image: authenticationservice
    build:
      context: .
      dockerfile: Services/Authentication/WebAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development      
    ports:
      - 5050:5050
    depends_on:
      - postgresql
    networks:
      - dev
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/appuser/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/appuser/.aspnet/https:ro

  postgresql:
    container_name: PostgreSQL
    image: postgres:latest
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - dev

  mongodb:
    container_name: MongoDB
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db
    networks:
      - dev

  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672 # For AMQP protocol
      - 15672:15672 # For management UI
    networks:
      - dev
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq


volumes:
  db-data:
  mongodb-data:
  rabbitmq-data: